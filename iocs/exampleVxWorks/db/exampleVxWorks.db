



#% macro, __doc__, Create some records for reading IOC statistics and details.
# Linux and VxWorks support
#% macro, name, Object name and GUI association name
#% macro, IOCNAME, Device prefix

# % gui, $(name), edm, ioc_stats.edl, ioc=exampleVxWorks
# % gui, $(name), edmembed, ioc_embed.edl, ioc=exampleVxWorks

# Used by Channel Access Security to determine access to this IOC.
record(mbbo, "exampleVxWorks:ACCESS")
{
  field(DESC, "exampleVxWorks Acc Mode")
  field(ASG,  "IOCMANAGERS")
  field(PINI, "YES")
  field(ZRST, "Running")
  field(ZRSV, "NO_ALARM")
  field(ONST, "Maintenance")
  field(ONSV, "MINOR")
  field(TWST, "Test")
  field(TWSV, "MINOR")
  field(THST, "OFFLINE")
  field(THSV, "MAJOR")
}
record(stringin, "exampleVxWorks:STARTTOD")
{
    field(DESC, "Time and date of startup")
    field(DTYP, "Soft Timestamp")
    field(PINI, "YES")
    field(INP, "@%m/%d/%Y %H:%M:%S")
}
record(stringin, "exampleVxWorks:TOD")
{
    field(DESC, "Current time and date")
    field(DTYP, "Soft Timestamp")
    field(SCAN, "1 second")
    field(INP, "@%m/%d/%Y %H:%M:%S")
}
record(calcout, "exampleVxWorks:HEARTBEAT")
{
    field(DESC, "1 Hz counter since boot")
    field(CALC, "(A<2147483647)?A+1:1")
    field(SCAN, "1 second")
    field(INPA, "exampleVxWorks:HEARTBEAT")
}
#
# Using an existing internal set of subroutines, this
# PV updates the Access Security mechanism dynamically.
# The .acf file is re-read.
#
record( sub, "exampleVxWorks:READACF")
{
    field( DESC, "exampleVxWorks ACF Update")
    field( ASG,  "IOCMANAGERS")
    field( INAM, "asSubInit")
    field( SNAM, "asSubProcess")
    field( BRSV, "INVALID")
}
record(sub, "exampleVxWorks:SYSRESET")
{
    field(DESC, "IOC Restart" )
    field(SNAM, "rebootProc")
    field(BRSV,"INVALID")
    field(L,"1")
}

record(ai, "exampleVxWorks:CA_CLNT_CNT") {
  field(DESC, "Number of CA Clients")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ca_clients")
  field(HOPR, "200")
  field(HIHI, "175")
  field(HIGH, "100")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
}

record(ai, "exampleVxWorks:CA_CONN_CNT") {
  field(DESC, "Number of CA Connections")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ca_connections")
  field(HOPR, "2000")
  field(HIHI, "1750")
  field(HIGH, "1000")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
}

record(ai, "exampleVxWorks:RECORD_CNT") {
  field(DESC, "Number of Records")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@records")
}

record(ai, "exampleVxWorks:FD_MAX") {
  field(DESC, "Max File Descriptors")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@maxfd")
}

record(ai, "exampleVxWorks:FD_CNT") {
  field(DESC, "Allocated File Descriptors")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(FLNK, "exampleVxWorks:FD_FREE  PP MS")
  field(INP, "@fd")
}

record(calc, "exampleVxWorks:FD_FREE") {
  field(DESC, "Available FDs")
  field(CALC, "B>0?B-A:C")
  field(INPA, "exampleVxWorks:FD_CNT  NPP MS")
  field(INPB, "exampleVxWorks:FD_MAX  NPP MS")
  field(INPC, "1000")
  field(HOPR, "150")
  field(LOLO, "5")
  field(LOW, "20")
  field(LLSV, "MAJOR")
  field(LSV, "MINOR")
}

# This makes the component icon reflect the severity
# % gui, $(name), sevr
record(ai, "exampleVxWorks:LOAD") {
  field(DESC, "CPU Load")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@cpu")
  field(EGU, "%")
  field(PREC, "1")
  field(HOPR, "100")
  field(HIHI, "80")
  field(HIGH, "70")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
}

record(ai, "exampleVxWorks:SUSP_TASK_CNT") {
  field(DESC, "Number Suspended Tasks")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@suspended_tasks")
  field(HIHI, "1")
  field(HHSV, "MAJOR")
}

record(ai, "exampleVxWorks:MEM_USED") {
  field(DESC, "Allocated Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@allocated_bytes")
  field(EGU, "byte")
}

record(ai, "exampleVxWorks:MEM_FREE") {
  field(DESC, "Free Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@free_bytes")
  field(EGU, "byte")
}

record(ai, "exampleVxWorks:MEM_MAX") {
  field(DESC, "Maximum Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@total_bytes")
  field(EGU, "byte")
}

record(ao, "exampleVxWorks:CA_UPD_TIME") {
  field(DESC, "CA Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@ca_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "15")
  field(PINI, "YES")
}

record(ao, "exampleVxWorks:FD_UPD_TIME") {
  field(DESC, "FD Check Update Time")
  field(DTYP, "IOC stats")
  field(OUT, "@fd_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "20")
  field(PINI, "YES")
}

record(ao, "exampleVxWorks:LOAD_UPD_TIME") {
  field(DESC, "CPU Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@cpu_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "10")
  field(PINI, "YES")
}

record(ao, "exampleVxWorks:MEM_UPD_TIME") {
  field(DESC, "Memory Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@memory_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "10")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:ST_SCRIPT1") {
  field(DESC, "Startup Script Part1")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script_1")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:ST_SCRIPT2") {
  field(DESC, "Startup Script Part2")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script_2")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:KERNEL_VERS") {
  field(DESC, "Kernel Version")
  field(DTYP, "IOC stats")
  field(INP, "@kernel_ver")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:EPICS_VERS") {
  field(DESC, "EPICS Version")
  field(DTYP, "IOC stats")
  field(INP, "@epics_ver")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:HOSTNAME") {
  field(DESC, "Host Name")
  field(DTYP, "IOC stats")
  field(INP, "@hostname")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:APP_DIR1") {
  field(DESC, "Application Directory Part 1")
  field(DTYP, "IOC stats")
  field(INP, "@pwd1")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:APP_DIR2") {
  field(DESC, "Application Directory Part 2")
  field(DTYP, "IOC stats")
  field(INP, "@pwd2")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:UPTIME") {
  field(DESC, "Elapsed Time since Start")
  field(SCAN, "1 second")
  field(DTYP, "IOC stats")
  field(INP, "@up_time")
  field(PINI, "YES")
}






record(ai, "exampleVxWorks:MEM_BLK") {
  field(DESC, "Maximum Free Memory Block")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@max_free")
  field(EGU, "byte")
  field(HOPR, "50000000")
  field(FLNK, "exampleVxWorks:MEM_BLK_FREE  PP MS")
}

record(calc, "exampleVxWorks:MEM_BLK_FREE") {
  field(DESC, "Maximum Free Memory Block")
  field(CALC, "A>0?A:B")
  field(INPA, "exampleVxWorks:MEM_BLK  NPP MS")
  field(INPB, "1000000000")
  field(EGU, "byte")
  field(HOPR, "50000000")
  field(LOLO, "100000")
  field(LOW, "500000")
  field(LLSV, "MAJOR")
  field(LSV, "MINOR")
}

record(stringin, "exampleVxWorks:BOOTLINE1") {
  field(DESC, "Boot Line Part1")
  field(DTYP, "IOC stats")
  field(INP, "@bootline_1")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:BOOTLINE2") {
  field(DESC, "Boot Line Part2")
  field(DTYP, "IOC stats")
  field(INP, "@bootline_2")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:BOOTLINE3") {
  field(DESC, "Boot Line Part3")
  field(DTYP, "IOC stats")
  field(INP, "@bootline_3")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:BOOTLINE4") {
  field(DESC, "Boot Line Part4")
  field(DTYP, "IOC stats")
  field(INP, "@bootline_4")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:BOOTLINE5") {
  field(DESC, "Boot Line Part5")
  field(DTYP, "IOC stats")
  field(INP, "@bootline_5")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:BOOTLINE6") {
  field(DESC, "Boot Line Part6")
  field(DTYP, "IOC stats")
  field(INP, "@bootline_6")
  field(PINI, "YES")
}

record(ai, "exampleVxWorks:SYS_MBUF_FREE") {
  field(DESC, "Min % Free Sys MBUFs")
  field(DTYP, "IOC stats")
  field(SCAN, "I/O Intr")
  field(EGU, "%")
  field(INP, "@min_sys_mbuf")
  field(FLNK, "")
}

record(ai, "exampleVxWorks:SYS_MBUF_MAX") {
  field(DESC, "Number of System MBUFs")
  field(DTYP, "IOC stats")
  field(INP, "@sys_mbuf")
  field(PINI, "YES")
}

record(ai, "exampleVxWorks:IFI_ERR_CNT") {
  field(DESC, "IF Input Errors")
  field(DTYP, "IOC stats")
  field(SCAN, "I/O Intr")
  field(INP, "@inp_errs")
}

record(ai, "exampleVxWorks:IFO_ERR_CNT") {
  field(DESC, "IF Output Errors")
  field(DTYP, "IOC stats")
  field(SCAN, "I/O Intr")
  field(INP, "@out_errs")
}






record(stringin, "exampleVxWorks:LOCATION") {
  field(DESC, "LOCATION")
  field(DTYP, "IOC env var")
  field(INP, "@LOCATION")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:ENGINEER") {
  field(DESC, "ENGINEER")
  field(DTYP, "IOC env var")
  field(INP, "@ENGINEER")
  field(PINI, "YES")
}
record(stringin, "exampleVxWorks:CA_ADDR_LIST") {
  field(DESC, "EPICS_CA_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_ADDR_LIST")
  field(PINI, "YES")
}
record(stringin, "exampleVxWorks:CA_CONN_TIME") {
  field(DESC, "EPICS_CA_CONN_TMO")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_CONN_TMO")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:CA_AUTO_ADDR") {
  field(DESC, "EPICS_CA_AUTO_ADDR_LIST")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_AUTO_ADDR_LIST")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:CA_RPTR_PORT") {
  field(DESC, "EPICS_CA_REPEATER_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_REPEATER_PORT")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:CA_SRVR_PORT") {
  field(DESC, "EPICS_CA_SERVER_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_SERVER_PORT")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:CA_MAX_ARRAY") {
  field(DESC, "EPICS_CA_MAX_ARRAY_BYTES")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_MAX_ARRAY_BYTES")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:CA_SRCH_TIME") {
  field(DESC, "EPICS_CA_MAX_SEARCH_PERIOD")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_MAX_SEARCH_PERIOD")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:CA_BEAC_TIME") {
  field(DESC, "EPICS_CA_BEACON_PERIOD")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_CA_BEACON_PERIOD")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:TIMEZONE") {
  field(DESC, "EPICS_TIMEZONE")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_TIMEZONE")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:TS_NTP_INET") {
  field(DESC, "EPICS_TS_NTP_INET")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_TS_NTP_INET")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:IOC_LOG_PORT") {
  field(DESC, "EPICS_IOC_LOG_PORT")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_IOC_LOG_PORT")
  field(PINI, "YES")
}

record(stringin, "exampleVxWorks:IOC_LOG_INET") {
  field(DESC, "EPICS_IOC_LOG_INET")
  field(DTYP, "IOC epics var")
  field(INP, "@EPICS_IOC_LOG_INET")
  field(PINI, "YES")
}






record(stringin, "exampleVxWorks:BSP_REV") {
  field(DESC, "BSP Revision")
  field(DTYP, "IOC stats")
  field(INP, "@bsp_rev")
  field(PINI, "YES")
}

record(ai, "exampleVxWorks:DAT_MBUF_FREE") {
  field(DESC, "Min % Free Data MBUFs")
  field(DTYP, "IOC stats")
  field(SCAN, "I/O Intr")
  field(EGU, "%")
  field(INP, "@min_data_mbuf")
  field(FLNK, "")
}

record(ai, "exampleVxWorks:DAT_MBUF_MAX") {
  field(DESC, "Number of Data MBUFs")
  field(DTYP, "IOC stats")
  field(INP, "@data_mbuf")
  field(PINI, "YES")
}
